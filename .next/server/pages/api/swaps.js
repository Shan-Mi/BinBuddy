"use strict";(()=>{var e={};e.id=217,e.ids=[217],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6908:(e,t,r)=>{r.r(t),r.d(t,{config:()=>l,default:()=>u,routeModule:()=>d});var a={};r.r(a),r.d(a,{default:()=>handler});var s=r(1802),i=r(7153),n=r(6249),o=r(3123);let getSwedishWeekNumber=e=>{let t=new Date(e);t.setHours(0,0,0,0),t.setDate(t.getDate()+4-(t.getDay()||7));let r=new Date(t.getFullYear(),0,1),a=Math.ceil(((t.getTime()-r.getTime())/864e5+1)/7);return a};async function handler(e,t){let r=getSwedishWeekNumber(new Date);if("GET"===e.method){let{week:a}=e.query,s=a?Number(a):r;try{let e=await o._.swap.findMany({where:{weekNumber:s},include:{fromFamily:!0,toFamily:!0}});return t.status(200).json(e)}catch(e){return console.error("Error fetching swaps:",e),t.status(500).json({error:"Failed to fetch swaps"})}}if("POST"===e.method){let{fromFamilyId:a,toFamilyId:s}=e.body;try{let e=await o._.swap.create({data:{weekNumber:r+1,fromFamilyId:a,toFamilyId:s,status:"PENDING"}});return t.status(201).json(e)}catch(e){return console.error("Error creating swap:",e),t.status(500).json({error:"Failed to create swap request"})}}if("PATCH"===e.method){let{swapId:r,status:a}=e.body;try{let e=await o._.swap.update({where:{id:r},data:{status:a}});return t.status(200).json(e)}catch(e){return console.error("Error updating swap:",e),t.status(500).json({error:"Failed to update swap status"})}}t.status(405).end()}let u=(0,n.l)(a,"default"),l=(0,n.l)(a,"config"),d=new s.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/swaps",pathname:"/api/swaps",bundlePath:"",filename:""},userland:a})},3123:(e,t,r)=>{r.d(t,{_:()=>s});let a=require("@prisma/client"),s=new a.PrismaClient}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(6908));module.exports=r})();